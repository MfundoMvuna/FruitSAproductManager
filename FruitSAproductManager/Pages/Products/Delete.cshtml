@page
@using FruitSAproductManager.DataAccess.Entities;
@model FruitSAproductManager.Pages.Products.DeleteModel

<div class="card">
    <div class="card-header">
        <h1>Delete Product</h1>
    </div>
    <div class="card-body">
        <form method="post">
            <div class="form-row">
                <div class="form-group col-md-6">
                    <label asp-for="Product.ProductCode" class="control-label"></label>
                    <input asp-for="Product.ProductCode" readonly class="form-control" />
                </div>
                <div class="form-group col-md-6">
                    <label asp-for="Product.Name" class="control-label"></label>
                    <input asp-for="Product.Name" readonly class="form-control" />
                </div>
            </div>

            <div class="form-row">
                <div class="form-group col-md-12">
                    <label asp-for="Product.Description" class="control-label"></label>
                    <textarea asp-for="Product.Description" readonly class="form-control"></textarea>
                </div>
            </div>

            <div class="form-row">
                <div class="form-group col-md-6">
                    <label asp-for="Product.Price" class="control-label"></label>
                    <input asp-for="Product.Price" readonly class="form-control" />
                </div>
                <div class="form-group col-md-6">
                    <label asp-for="Product.ImageUrl" class="control-label"></label>
                    <img id="productImage" src="" alt="Product Image" class="img-thumbnail" style="max-width: 300px; display: none;" />
                </div>
            </div>

            <div class="form-row">
                <div class="col-md-12">
                    <input type="submit" value="Delete" class="btn btn-danger" />
                    <a asp-page="./Index" class="btn btn-secondary ml-2">Back to List</a>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var imageId = @Model.Product.ProductId;

            fetch(`?handler=GetMeetingItems&id=${imageId}`, {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
                .then(response => response.json())
                .then(data => {
                    if (data && data.base64Image) {
                        const imgElement = document.getElementById('productImage');
                        imgElement.src = `data:image/jpeg;base64,${data.base64Image}`;
                        imgElement.style.display = 'block';
                    }
                    else {
                        console.log(data);
                    }
                })
                .catch(error => {
                    console.error('Error fetching the image:', error);
                });
        });
    </script>
}
